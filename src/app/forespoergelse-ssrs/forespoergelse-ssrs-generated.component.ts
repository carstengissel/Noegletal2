/*
  This file is automatically generated. Any changes will be overwritten.
  Modify forespoergelse-ssrs.component.ts instead.
*/
import { ChangeDetectorRef, ViewChild, AfterViewInit, Injector, OnInit, OnDestroy } from '@angular/core';
import { Router, ActivatedRoute } from '@angular/router';
import { Location } from '@angular/common';
import { Subscription } from 'rxjs/Subscription';

import { DialogService, DIALOG_PARAMETERS, DialogRef } from '@radzen/angular/dist/dialog';
import { NotificationService } from '@radzen/angular/dist/notification';
import { ContentComponent } from '@radzen/angular/dist/content';
import { TabsComponent } from '@radzen/angular/dist/tabs';
import { LabelComponent } from '@radzen/angular/dist/label';
import { DataListComponent } from '@radzen/angular/dist/datalist';
import { HtmlComponent } from '@radzen/angular/dist/html';

import { NoegleTalService } from '../noegle-tal.service';
import {ReportService} from "../powerbi-report/report.service";

export class ForespoergelseSsrsGenerated implements AfterViewInit, OnInit, OnDestroy {
  // Components
  @ViewChild('content1') content1: ContentComponent;
  @ViewChild('tabs0') tabs0: TabsComponent;
  @ViewChild('label0') label0: LabelComponent;
  @ViewChild('datalist0') datalist0: DataListComponent;
  @ViewChild('html0') html0: HtmlComponent;
  @ViewChild('html1') html1: HtmlComponent;

  router: Router;

  cd: ChangeDetectorRef;

  route: ActivatedRoute;

  notificationService: NotificationService;

  dialogService: DialogService;

  dialogRef: DialogRef;

  _location: Location;

  _subscription: Subscription;

  noegleTal: NoegleTalService;

  model: any;

  filterParm: any;

  getNoegleTalReportsResult: any;

  getNoegleTalReportsCount: any;

  parameters: any;

  valgt: any;

  constructor(private injector: Injector, private  reportService: ReportService) {
  }

  ngOnInit() {
    this.notificationService = this.injector.get(NotificationService);

    this.dialogService = this.injector.get(DialogService);

    this.dialogRef = this.injector.get(DialogRef, null);

    this.router = this.injector.get(Router);

    this.cd = this.injector.get(ChangeDetectorRef);

    this._location = this.injector.get(Location);

    this.route = this.injector.get(ActivatedRoute);

    this.noegleTal = this.injector.get(NoegleTalService);
  }

  ngAfterViewInit() {
    this._subscription = this.route.params.subscribe(parameters => {
      if (this.dialogRef) {
        this.parameters = this.injector.get(DIALOG_PARAMETERS);
      } else {
        this.parameters = parameters;
      }
      this.load();
      this.cd.detectChanges();
    });
  }

  ngOnDestroy() {
    this._subscription.unsubscribe();
  }


  load() {
    this.model = this.parameters.model;

    this.getSsrsReport(this.model);

    // this.filterParm = "Parent eq '" + this.model+ "' and System eq 'NÃ¸gletal' and Type ne 'Embed'";
    //
    // this.noegleTal.getNoegleTalReports(`${this.filterParm}`, null, null, null, null, null, null, null)
    // .subscribe((result: any) => {
    //   this.getNoegleTalReportsResult = result.value;
    //
    //   this.getNoegleTalReportsCount = result.value.length;
    // }, (result: any) => {
    //
    // });
  }

  // **********************************************************  18/12
  getSsrsReport(parent: string): void {

    this.reportService.getSsrsReports(parent)
        .subscribe(
            response => {
              this.getNoegleTalReportsResult = response;

              this.getNoegleTalReportsCount = response.length;
            },
            (error: any) => {
              console.log(error);
            })
  }
  // **********************************************************

  tabs0Change(event: any) {
    this.valgt = event.index;
  }
}
