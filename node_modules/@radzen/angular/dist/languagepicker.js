"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = require("@angular/core");
var common_1 = require("@angular/common");
var forms_1 = require("@angular/forms");
var dropdown_1 = require("primeng/dropdown");
var LanguagePickerItemComponent = /** @class */ (function () {
    function LanguagePickerItemComponent() {
    }
    LanguagePickerItemComponent.decorators = [
        { type: core_1.Component, args: [{
                    selector: 'rz-languagepicker-item',
                    template: ""
                },] },
    ];
    /** @nocollapse */
    LanguagePickerItemComponent.ctorParameters = function () { return []; };
    LanguagePickerItemComponent.propDecorators = {
        "text": [{ type: core_1.Input },],
        "value": [{ type: core_1.Input },],
    };
    return LanguagePickerItemComponent;
}());
exports.LanguagePickerItemComponent = LanguagePickerItemComponent;
var LanguagePickerComponent = /** @class */ (function () {
    function LanguagePickerComponent() {
        this.style = {};
    }
    LanguagePickerComponent.prototype.onChange = function (value) {
        var path = location.href.replace(this.value, value);
        if (!location.href.startsWith(path)) {
            location.href = path;
        }
    };
    LanguagePickerComponent.prototype.ngAfterContentInit = function () {
        this.options = this.items.map(function (item) {
            return {
                label: item.text,
                value: item.value
            };
        });
        var option = this.options.find(function (option) { return location.href.indexOf("/" + option.value) >= 0; });
        if (option) {
            this.value = option.value;
        }
    };
    LanguagePickerComponent.decorators = [
        { type: core_1.Component, args: [{
                    selector: 'rz-languagepicker',
                    template: "\n    <p-dropdown [options]=\"options\" [ngModel]=\"value\" appendTo=\"body\" [autoWidth]=\"false\" [style]=\"style\" (onChange)=\"onChange($event.value)\">\n    </p-dropdown>\n  "
                },] },
    ];
    /** @nocollapse */
    LanguagePickerComponent.ctorParameters = function () { return []; };
    LanguagePickerComponent.propDecorators = {
        "style": [{ type: core_1.Input },],
        "items": [{ type: core_1.ContentChildren, args: [LanguagePickerItemComponent,] },],
    };
    return LanguagePickerComponent;
}());
exports.LanguagePickerComponent = LanguagePickerComponent;
var LanguagePickerModule = /** @class */ (function () {
    function LanguagePickerModule() {
    }
    LanguagePickerModule.decorators = [
        { type: core_1.NgModule, args: [{
                    imports: [common_1.CommonModule, forms_1.FormsModule, dropdown_1.DropdownModule],
                    declarations: [LanguagePickerComponent, LanguagePickerItemComponent],
                    exports: [LanguagePickerComponent, LanguagePickerItemComponent]
                },] },
    ];
    /** @nocollapse */
    LanguagePickerModule.ctorParameters = function () { return []; };
    return LanguagePickerModule;
}());
exports.LanguagePickerModule = LanguagePickerModule;
