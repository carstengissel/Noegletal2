"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = require("@angular/core");
var common_1 = require("@angular/common");
var tabview_1 = require("primeng/tabview");
var TabsItemComponent = /** @class */ (function () {
    function TabsItemComponent() {
    }
    TabsItemComponent.decorators = [
        { type: core_1.Component, args: [{
                    selector: 'rz-tabs-item',
                    template: "\n    <ng-template><ng-content></ng-content></ng-template>\n  "
                },] },
    ];
    /** @nocollapse */
    TabsItemComponent.ctorParameters = function () { return []; };
    TabsItemComponent.propDecorators = {
        "text": [{ type: core_1.Input },],
        "icon": [{ type: core_1.Input },],
        "selected": [{ type: core_1.Input },],
        "template": [{ type: core_1.ViewChild, args: [core_1.TemplateRef,] },],
    };
    return TabsItemComponent;
}());
exports.TabsItemComponent = TabsItemComponent;
var TabsComponent = /** @class */ (function () {
    function TabsComponent(elementRef) {
        this.elementRef = elementRef;
        this.style = {};
        this.change = new core_1.EventEmitter();
    }
    TabsComponent.prototype.ngAfterViewInit = function () {
        var tabs = this.items.toArray();
        for (var index = 0; index < tabs.length; index++) {
            var tab = tabs[index];
            if (tab.icon) {
                var icon = this.elementRef.nativeElement.querySelector(".ui-tabview-nav > li:nth-child(" + (index + 1) + ") .ui-tabview-left-icon");
                if (icon) {
                    icon.innerText = tab.icon;
                }
            }
        }
    };
    TabsComponent.prototype.onChange = function (event) {
        this.change.next({
            index: event.index
        });
    };
    TabsComponent.decorators = [
        { type: core_1.Component, args: [{
                    selector: 'rz-tabs',
                    template: "<p-tabView stopChangePropagation [style]=\"style\" (onChange)=\"onChange($event)\">\n    <p-tabPanel *ngFor=\"let item of items; let index = index\" [leftIcon]=\"item.icon\" [header]=\"item.text\" [selected]=\"item.selected || index == selectedIndex\">\n      <ng-container *ngTemplateOutlet=\"item.template\"></ng-container>\n    </p-tabPanel>\n  </p-tabView>"
                },] },
    ];
    /** @nocollapse */
    TabsComponent.ctorParameters = function () { return [
        { type: core_1.ElementRef, },
    ]; };
    TabsComponent.propDecorators = {
        "selectedIndex": [{ type: core_1.Input },],
        "style": [{ type: core_1.Input },],
        "change": [{ type: core_1.Output },],
        "items": [{ type: core_1.ContentChildren, args: [TabsItemComponent,] },],
    };
    return TabsComponent;
}());
exports.TabsComponent = TabsComponent;
var TabsModule = /** @class */ (function () {
    function TabsModule() {
    }
    TabsModule.decorators = [
        { type: core_1.NgModule, args: [{
                    imports: [common_1.CommonModule, tabview_1.TabViewModule],
                    declarations: [TabsComponent, TabsItemComponent],
                    exports: [TabsComponent, TabsItemComponent]
                },] },
    ];
    /** @nocollapse */
    TabsModule.ctorParameters = function () { return []; };
    return TabsModule;
}());
exports.TabsModule = TabsModule;
