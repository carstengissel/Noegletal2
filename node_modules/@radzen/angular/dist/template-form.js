"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = require("@angular/core");
var forms_1 = require("@angular/forms");
var Subject_1 = require("rxjs/Subject");
require("rxjs/add/operator/takeUntil");
require("rxjs/add/operator/startWith");
var common_1 = require("@angular/common");
var form_component_1 = require("./form-component");
var TemplateFormComponent = /** @class */ (function () {
    function TemplateFormComponent() {
        this.ngUnsubscribe = new Subject_1.Subject();
        this.style = {};
        this.submit = new core_1.EventEmitter();
    }
    Object.defineProperty(TemplateFormComponent.prototype, "valid", {
        get: function () {
            return this.ngForm.valid;
        },
        enumerable: true,
        configurable: true
    });
    TemplateFormComponent.prototype.onSubmit = function (event) {
        event.preventDefault();
        event.stopPropagation();
        if (this.ngForm.valid) {
            this.submit.next(this.ngForm.value);
        }
    };
    TemplateFormComponent.prototype.ngAfterViewInit = function () {
        var _this = this;
        this.fields = [];
        this.components.changes
            .takeUntil(this.ngUnsubscribe)
            .startWith(this.components.changes)
            .subscribe(function () {
            _this.components.forEach(function (component) {
                _this.fields.push({ property: component.name });
                _this.ngForm.addControl(component.ngModel);
            });
        });
    };
    TemplateFormComponent.prototype.ngOnDestroy = function () {
        this.ngUnsubscribe.next();
        this.ngUnsubscribe.complete();
    };
    TemplateFormComponent.decorators = [
        { type: core_1.Component, args: [{
                    selector: 'rz-template-form',
                    template: "<form class=\"ui-template-form\" [ngStyle]=\"style\" (submit)=\"onSubmit($event)\">\n      <ng-content></ng-content>\n    </form>\n  "
                },] },
    ];
    /** @nocollapse */
    TemplateFormComponent.ctorParameters = function () { return []; };
    TemplateFormComponent.propDecorators = {
        "style": [{ type: core_1.Input },],
        "submit": [{ type: core_1.Output },],
        "ngForm": [{ type: core_1.ViewChild, args: [forms_1.NgForm,] },],
        "components": [{ type: core_1.ContentChildren, args: [form_component_1.FormComponent, { descendants: true },] },],
    };
    return TemplateFormComponent;
}());
exports.TemplateFormComponent = TemplateFormComponent;
var TemplateFormModule = /** @class */ (function () {
    function TemplateFormModule() {
    }
    TemplateFormModule.decorators = [
        { type: core_1.NgModule, args: [{
                    imports: [common_1.CommonModule, forms_1.FormsModule],
                    declarations: [TemplateFormComponent],
                    exports: [TemplateFormComponent]
                },] },
    ];
    /** @nocollapse */
    TemplateFormModule.ctorParameters = function () { return []; };
    return TemplateFormModule;
}());
exports.TemplateFormModule = TemplateFormModule;
