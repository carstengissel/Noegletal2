"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = require("@angular/core");
var common_1 = require("@angular/common");
var animations_1 = require("@angular/animations");
var Subject_1 = require("rxjs/Subject");
require("rxjs/add/operator/takeUntil");
var transition_1 = require("./transition");
var layout_1 = require("./layout");
var SidebarComponent = /** @class */ (function () {
    function SidebarComponent(layoutService) {
        var _this = this;
        this.layoutService = layoutService;
        this.style = {};
        this.ngUnsubscribe = new Subject_1.Subject();
        layoutService.headerHeight
            .takeUntil(this.ngUnsubscribe)
            .subscribe(function (headerHeight) {
            _this.headerHeight = headerHeight;
        });
        layoutService.footerHeight
            .takeUntil(this.ngUnsubscribe)
            .subscribe(function (footerHeight) {
            _this.footerHeight = footerHeight;
        });
        this.open = !this.layoutService.deviceMediaQuery().matches;
    }
    Object.defineProperty(SidebarComponent.prototype, "open", {
        get: function () {
            return this.layoutService.sidebarOpen.getValue();
        },
        set: function (value) {
            this.layoutService.sidebarOpen.next(value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SidebarComponent.prototype, "stretch", {
        get: function () {
            return this.layoutService.sidebarStretch.getValue();
        },
        set: function (value) {
            this.layoutService.sidebarStretch.next(value);
        },
        enumerable: true,
        configurable: true
    });
    SidebarComponent.prototype.ngOnInit = function () {
        var nativeElement = this.sidebar.nativeElement;
        this.layoutService.sidebarWidth.next(nativeElement.offsetWidth);
    };
    SidebarComponent.prototype.ngOnChanges = function (changes) {
        var style = changes.style, open = changes.open, stretch = changes.stretch;
        if (open && !open.firstChange) {
            this.layoutService.sidebarOpen.next(open.currentValue);
        }
        if (stretch && !stretch.firstChange) {
            this.layoutService.sidebarStretch.next(stretch.currentValue);
        }
    };
    SidebarComponent.prototype.ngAfterViewInit = function () {
        this.layoutService.sidebarWidth.next(this.sidebar.nativeElement.offsetWidth);
    };
    SidebarComponent.prototype.ngOnDestroy = function () {
        this.open = false;
        this.ngUnsubscribe.next();
        this.ngUnsubscribe.complete();
    };
    SidebarComponent.decorators = [
        { type: core_1.Component, args: [{
                    selector: 'rz-sidebar',
                    template: "\n  <div #sidebar [ngClass]=\"{sidebar: true}\" [ngStyle]=\"style\" [@open]=\"open ? 'visible': 'hidden'\"\n       [style.top.px]=\"stretch ? 0 : headerHeight\" [style.bottom.px]=\"stretch ? 0 : footerHeight\">\n    <ng-content></ng-content>\n  </div>\n  ",
                    animations: [
                        animations_1.trigger('open', [
                            animations_1.state('visible', animations_1.style({
                                transform: 'translateX(0)'
                            })),
                            animations_1.state('hidden', animations_1.style({
                                transform: 'translateX(-100%)'
                            })),
                            animations_1.transition('hidden <=> visible', animations_1.animate(transition_1.EASING))
                        ])
                    ]
                },] },
    ];
    /** @nocollapse */
    SidebarComponent.ctorParameters = function () { return [
        { type: layout_1.LayoutService, },
    ]; };
    SidebarComponent.propDecorators = {
        "open": [{ type: core_1.Input },],
        "stretch": [{ type: core_1.Input },],
        "style": [{ type: core_1.Input },],
        "sidebar": [{ type: core_1.ViewChild, args: ['sidebar',] },],
    };
    return SidebarComponent;
}());
exports.SidebarComponent = SidebarComponent;
var SidebarModule = /** @class */ (function () {
    function SidebarModule() {
    }
    SidebarModule.decorators = [
        { type: core_1.NgModule, args: [{
                    imports: [common_1.CommonModule, layout_1.LayoutModule],
                    declarations: [SidebarComponent],
                    exports: [SidebarComponent]
                },] },
    ];
    /** @nocollapse */
    SidebarModule.ctorParameters = function () { return []; };
    return SidebarModule;
}());
exports.SidebarModule = SidebarModule;
