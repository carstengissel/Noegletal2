"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = require("@angular/core");
var common_1 = require("@angular/common");
var datalist_1 = require("primeng/datalist");
var datagrid_1 = require("primeng/datagrid");
var DataListComponent = /** @class */ (function () {
    function DataListComponent() {
        this.wrapItems = false;
        this.style = {};
        this.data = [];
        this.allowPaging = false;
        this.pageSize = 10;
        this.visible = true;
        this.emptyText = 'No records found.';
        this.defaultRowText = 'Template for index';
        this.loadData = new core_1.EventEmitter();
    }
    DataListComponent.prototype.onPage = function (event) {
        this.loadData.next({
            skip: this.allowPaging ? event.first : null,
            top: this.allowPaging ? event.rows : null
        });
    };
    DataListComponent.decorators = [
        { type: core_1.Component, args: [{
                    selector: 'rz-datalist',
                    template: "<p-dataList [style]=\"style\" *ngIf=\"visible && !wrapItems\" [value]=\"data\" [paginator]=\"allowPaging\" [rows]=\"allowPaging ? pageSize : -1\"\n    [lazy]=\"loadData.observers.length > 0\" (onPage)=\"onPage($event)\" [totalRecords]=\"count\" [emptyMessage]=\"emptyText\">\n      <ng-template *ngIf=\"template\" pTemplate=\"item\" let-data>\n        <ng-template [ngTemplateOutlet]=\"template\" [ngTemplateOutletContext]=\"{ $implicit: data }\"></ng-template>\n      </ng-template>\n      <ng-template *ngIf=\"!template\" pTemplate=\"item\" let-i=\"index\">\n        {{ defaultRowText }}: {{i}}\n      </ng-template>\n  </p-dataList>\n  <p-dataGrid [style]=\"style\" *ngIf=\"visible && wrapItems\" [value]=\"data\" [paginator]=\"allowPaging\" [rows]=\"allowPaging ? pageSize : -1\"\n    [lazy]=\"loadData.observers.length > 0\" (onPage)=\"onPage($event)\" [totalRecords]=\"count\" [emptyMessage]=\"emptyText\">\n      <ng-template *ngIf=\"template\" pTemplate=\"item\" let-data>\n        <ng-template [ngTemplateOutlet]=\"template\" [ngTemplateOutletContext]=\"{ $implicit: data }\"></ng-template>\n      </ng-template>\n      <ng-template *ngIf=\"!template\" pTemplate=\"item\" let-i=\"index\">\n        {{ defaultRowText }}: {{i}}\n      </ng-template>\n  </p-dataGrid>"
                },] },
    ];
    /** @nocollapse */
    DataListComponent.ctorParameters = function () { return []; };
    DataListComponent.propDecorators = {
        "wrapItems": [{ type: core_1.Input },],
        "style": [{ type: core_1.Input },],
        "data": [{ type: core_1.Input },],
        "allowPaging": [{ type: core_1.Input },],
        "pageSize": [{ type: core_1.Input },],
        "count": [{ type: core_1.Input },],
        "visible": [{ type: core_1.Input },],
        "emptyText": [{ type: core_1.Input },],
        "defaultRowText": [{ type: core_1.Input },],
        "template": [{ type: core_1.ContentChild, args: [core_1.TemplateRef,] },],
        "loadData": [{ type: core_1.Output },],
    };
    return DataListComponent;
}());
exports.DataListComponent = DataListComponent;
var DataListModule = /** @class */ (function () {
    function DataListModule() {
    }
    DataListModule.decorators = [
        { type: core_1.NgModule, args: [{
                    imports: [common_1.CommonModule, datagrid_1.DataGridModule, datalist_1.DataListModule],
                    declarations: [DataListComponent],
                    exports: [DataListComponent]
                },] },
    ];
    /** @nocollapse */
    DataListModule.ctorParameters = function () { return []; };
    return DataListModule;
}());
exports.DataListModule = DataListModule;
