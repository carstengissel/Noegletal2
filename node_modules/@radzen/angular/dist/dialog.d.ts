import { ComponentFactoryResolver, ApplicationRef, Injector, InjectionToken, Type } from '@angular/core';
import { Router } from '@angular/router';
import { Observable } from 'rxjs/Observable';
export declare class DialogRef {
    private afterClosed$;
    private beforeClose$;
    private subscription;
    constructor(router: Router);
    afterClosed(): Observable<any>;
    beforeClose(): Observable<any>;
    close(result?: any): void;
}
export declare class DialogComponent {
    private dialogRef;
    component: Type<any>;
    title: string;
    width: number;
    height: number;
    left: number;
    top: number;
    visible: boolean;
    private close$;
    constructor(dialogRef: DialogRef);
    onHide(): void;
    ngAfterViewChecked(): void;
}
export declare class DialogInjector implements Injector {
    private injector;
    private tokens;
    constructor(injector: Injector, tokens: WeakMap<any, any>);
    get(token: any, notFoundValue?: any): any;
}
export interface DialogOptions {
    title?: string;
    parameters?: any;
    width?: number;
    height?: number;
    left?: number;
    top?: number;
}
export declare const DIALOG_PARAMETERS: InjectionToken<any>;
export declare class DialogService {
    private componentFactoryResolver;
    private applicationRef;
    private injector;
    private router;
    constructor(componentFactoryResolver: ComponentFactoryResolver, applicationRef: ApplicationRef, injector: Injector, router: Router);
    open(componentType: Type<any>, options?: DialogOptions): DialogRef;
}
export declare class DialogModule {
}
