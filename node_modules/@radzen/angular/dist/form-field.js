"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = require("@angular/core");
var form_1 = require("./form");
var FormFieldComponent = /** @class */ (function () {
    function FormFieldComponent(parent, elementRef) {
        this.elementRef = elementRef;
        this.requiredText = 'is required';
        this._visible = true;
        this.parent = parent;
    }
    Object.defineProperty(FormFieldComponent.prototype, "disabled", {
        get: function () {
            return this._disabled;
        },
        set: function (value) {
            this._disabled = value;
            if (this.parent && this.parent.form) {
                var control = this.parent.form.controls[this.property];
                if (control) {
                    if (value) {
                        control.disable();
                    }
                    else {
                        control.enable();
                    }
                }
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FormFieldComponent.prototype, "visible", {
        get: function () {
            return this._visible;
        },
        set: function (value) {
            if (this._visible != value) {
                this._visible = value;
                if (this.parent) {
                    this.parent.createForm();
                }
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FormFieldComponent.prototype, "defaultValue", {
        get: function () {
            return this._defaultValue;
        },
        set: function (value) {
            this._defaultValue = value;
            if (this.parent && this.parent.form) {
                var control = this.parent.form.controls[this.property];
                if (control) {
                    control.setValue(this.parse(value));
                }
            }
        },
        enumerable: true,
        configurable: true
    });
    FormFieldComponent.prototype.parse = function (value) {
        return value;
    };
    /** @nocollapse */
    FormFieldComponent.ctorParameters = function () { return [
        { type: form_1.FormComponent, decorators: [{ type: core_1.Host },] },
        { type: core_1.ElementRef, },
    ]; };
    FormFieldComponent.propDecorators = {
        "property": [{ type: core_1.Input },],
        "title": [{ type: core_1.Input },],
        "required": [{ type: core_1.Input },],
        "requiredText": [{ type: core_1.Input },],
        "compare": [{ type: core_1.Input },],
        "disabled": [{ type: core_1.Input },],
        "visible": [{ type: core_1.Input },],
        "defaultValue": [{ type: core_1.Input },],
    };
    return FormFieldComponent;
}());
exports.FormFieldComponent = FormFieldComponent;
