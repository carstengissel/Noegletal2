"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = require("@angular/core");
var common_1 = require("@angular/common");
var router_1 = require("@angular/router");
var Subject_1 = require("rxjs/Subject");
var navigation_1 = require("./navigation");
var PanelMenuItemComponent = /** @class */ (function (_super) {
    __extends(PanelMenuItemComponent, _super);
    function PanelMenuItemComponent() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    PanelMenuItemComponent.decorators = [
        { type: core_1.Component, args: [{
                    selector: 'rz-panelmenu-item',
                    template: ""
                },] },
    ];
    /** @nocollapse */
    PanelMenuItemComponent.ctorParameters = function () { return []; };
    PanelMenuItemComponent.propDecorators = {
        "items": [{ type: core_1.ContentChildren, args: [PanelMenuItemComponent,] },],
    };
    return PanelMenuItemComponent;
}(navigation_1.NavigationItemComponent));
exports.PanelMenuItemComponent = PanelMenuItemComponent;
var PanelMenuComponent = /** @class */ (function () {
    function PanelMenuComponent(router) {
        var _this = this;
        this.router = router;
        this.style = {};
        this.ngUnsubscribe = new Subject_1.Subject();
        this.childrenToItems = function () {
            _this.items = navigation_1.childrenToItems(_this.children.toArray());
            _this.sync();
        };
        router.events.takeUntil(this.ngUnsubscribe).subscribe(function (event) {
            if (event instanceof router_1.NavigationEnd && _this.items) {
                _this.sync();
            }
        });
    }
    PanelMenuComponent.prototype.ngAfterContentInit = function () {
        if (this.children) {
            this.childrenToItems();
            this.children.changes
                .takeUntil(this.ngUnsubscribe)
                .subscribe(this.childrenToItems);
        }
    };
    PanelMenuComponent.prototype.ngOnDestroy = function () {
        this.ngUnsubscribe.next();
        this.ngUnsubscribe.complete();
    };
    PanelMenuComponent.prototype.sync = function () {
        navigation_1.syncWithRouter(this.items, this.router);
        this.items = this.items.slice();
    };
    PanelMenuComponent.decorators = [
        { type: core_1.Component, args: [{
                    selector: 'rz-panelmenu',
                    template: "\n    <ul [ngStyle]=\"style\" rz-submenu class=\"panel-menu\" [items]=\"items\" [closeOnClick]=\"false\">\n    </ul>\n  "
                },] },
    ];
    /** @nocollapse */
    PanelMenuComponent.ctorParameters = function () { return [
        { type: router_1.Router, },
    ]; };
    PanelMenuComponent.propDecorators = {
        "items": [{ type: core_1.Input },],
        "style": [{ type: core_1.Input },],
        "children": [{ type: core_1.ContentChildren, args: [PanelMenuItemComponent,] },],
    };
    return PanelMenuComponent;
}());
exports.PanelMenuComponent = PanelMenuComponent;
var PanelMenuModule = /** @class */ (function () {
    function PanelMenuModule() {
    }
    PanelMenuModule.decorators = [
        { type: core_1.NgModule, args: [{
                    imports: [common_1.CommonModule, navigation_1.NavigationModule],
                    declarations: [PanelMenuComponent, PanelMenuItemComponent],
                    exports: [PanelMenuComponent, PanelMenuItemComponent]
                },] },
    ];
    /** @nocollapse */
    PanelMenuModule.ctorParameters = function () { return []; };
    return PanelMenuModule;
}());
exports.PanelMenuModule = PanelMenuModule;
