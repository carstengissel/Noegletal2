"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = require("@angular/core");
var form_field_1 = require("./form-field");
var RatingFormFieldComponent = /** @class */ (function (_super) {
    __extends(RatingFormFieldComponent, _super);
    function RatingFormFieldComponent() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.stars = 5;
        return _this;
    }
    RatingFormFieldComponent.decorators = [
        { type: core_1.Component, args: [{
                    selector: 'rz-rating-form-field',
                    template: "\n    <p-rating\n      [cancel]=\"true\"\n      [attr.id]=\"property\"\n      [stars]=\"stars\"\n      [formControl]=\"parent.form.controls[property]\">\n    </p-rating>\n    <div class=\"md-inputfield\"\n      *ngIf=\"(parent.form.controls[property].touched || parent.submitted) && parent.form.controls[property].errors?.required\">\n      <div class=\"ui-message ui-messages-error ui-corner-all\">\n        {{ title }} {{ requiredText }}\n      </div>\n    </div>\n  ",
                    providers: [
                        {
                            provide: form_field_1.FormFieldComponent,
                            useExisting: core_1.forwardRef(function () { return RatingFormFieldComponent; })
                        }
                    ]
                },] },
    ];
    /** @nocollapse */
    RatingFormFieldComponent.ctorParameters = function () { return []; };
    RatingFormFieldComponent.propDecorators = {
        "stars": [{ type: core_1.Input },],
    };
    return RatingFormFieldComponent;
}(form_field_1.FormFieldComponent));
exports.RatingFormFieldComponent = RatingFormFieldComponent;
