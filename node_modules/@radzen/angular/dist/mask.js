"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = require("@angular/core");
var common_1 = require("@angular/common");
var forms_1 = require("@angular/forms");
var form_component_1 = require("./form-component");
var inputmask_1 = require("primeng/inputmask");
var MaskComponent = /** @class */ (function (_super) {
    __extends(MaskComponent, _super);
    function MaskComponent() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.style = {};
        _this.mask = '';
        _this.autoClear = true;
        _this.unmask = false;
        _this.readOnly = false;
        _this.placeholder = '';
        return _this;
    }
    MaskComponent.decorators = [
        { type: core_1.Component, args: [{
                    selector: 'rz-mask',
                    template: "\n    <p-inputMask\n      type=\"text\"\n      [style]=\"style\"\n      [readonly]=\"readOnly\"\n      [inputId]=\"name\"\n      [mask]=\"mask\"\n      [autoClear]=\"autoClear\"\n      [unmask]=\"unmask\"\n      [disabled]=\"disabled\"\n      [size]=\"size\"\n      [maxlength]=\"maxlength\"\n      [placeholder]=\"placeholder\"\n      styleClass=\"mask\"\n      [(ngModel)]=\"value\"\n      (onBlur)=\"onTouched()\"></p-inputMask>\n  ",
                    providers: [
                        {
                            provide: forms_1.NG_VALUE_ACCESSOR,
                            useExisting: core_1.forwardRef(function () { return MaskComponent; }),
                            multi: true
                        },
                        {
                            provide: form_component_1.FormComponent,
                            useExisting: core_1.forwardRef(function () { return MaskComponent; })
                        }
                    ]
                },] },
    ];
    /** @nocollapse */
    MaskComponent.ctorParameters = function () { return []; };
    MaskComponent.propDecorators = {
        "style": [{ type: core_1.Input },],
        "mask": [{ type: core_1.Input },],
        "autoClear": [{ type: core_1.Input },],
        "unmask": [{ type: core_1.Input },],
        "size": [{ type: core_1.Input },],
        "maxlength": [{ type: core_1.Input },],
        "readOnly": [{ type: core_1.Input },],
        "placeholder": [{ type: core_1.Input },],
    };
    return MaskComponent;
}(form_component_1.FormComponent));
exports.MaskComponent = MaskComponent;
var MaskModule = /** @class */ (function () {
    function MaskModule() {
    }
    MaskModule.decorators = [
        { type: core_1.NgModule, args: [{
                    imports: [common_1.CommonModule, forms_1.FormsModule, inputmask_1.InputMaskModule],
                    declarations: [MaskComponent],
                    exports: [MaskComponent]
                },] },
    ];
    /** @nocollapse */
    MaskModule.ctorParameters = function () { return []; };
    return MaskModule;
}());
exports.MaskModule = MaskModule;
