"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = require("@angular/core");
var common_1 = require("@angular/common");
var forms_1 = require("@angular/forms");
var selectbutton_1 = require("primeng/selectbutton");
var form_component_1 = require("./form-component");
var options_component_1 = require("./options-component");
var SelectBarOptionComponent = /** @class */ (function () {
    function SelectBarOptionComponent() {
    }
    SelectBarOptionComponent.decorators = [
        { type: core_1.Component, args: [{
                    selector: 'rz-selectbar-option',
                    template: ''
                },] },
    ];
    /** @nocollapse */
    SelectBarOptionComponent.ctorParameters = function () { return []; };
    SelectBarOptionComponent.propDecorators = {
        "text": [{ type: core_1.Input },],
        "value": [{ type: core_1.Input },],
    };
    return SelectBarOptionComponent;
}());
exports.SelectBarOptionComponent = SelectBarOptionComponent;
var SelectBarComponent = /** @class */ (function (_super) {
    __extends(SelectBarComponent, _super);
    function SelectBarComponent() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.multiple = false;
        _this.style = {};
        return _this;
    }
    SelectBarComponent.decorators = [
        { type: core_1.Component, args: [{
                    selector: 'rz-selectbar',
                    template: "\n    <p-selectButton\n      [(ngModel)]=\"value\"\n      [style]=\"style\"\n      [multiple]=\"multiple\"\n      [options]=\"options\"\n      [disabled]=\"disabled\"\n    ></p-selectButton>\n  ",
                    providers: [
                        {
                            provide: forms_1.NG_VALUE_ACCESSOR,
                            useExisting: core_1.forwardRef(function () { return SelectBarComponent; }),
                            multi: true
                        },
                        {
                            provide: form_component_1.FormComponent,
                            useExisting: core_1.forwardRef(function () { return SelectBarComponent; })
                        }
                    ]
                },] },
    ];
    /** @nocollapse */
    SelectBarComponent.ctorParameters = function () { return []; };
    SelectBarComponent.propDecorators = {
        "multiple": [{ type: core_1.Input },],
        "children": [{ type: core_1.ContentChildren, args: [SelectBarOptionComponent,] },],
        "style": [{ type: core_1.Input },],
    };
    return SelectBarComponent;
}(options_component_1.OptionsComponent));
exports.SelectBarComponent = SelectBarComponent;
var SelectBarModule = /** @class */ (function () {
    function SelectBarModule() {
    }
    SelectBarModule.decorators = [
        { type: core_1.NgModule, args: [{
                    imports: [common_1.CommonModule, selectbutton_1.SelectButtonModule, forms_1.FormsModule],
                    declarations: [SelectBarComponent, SelectBarOptionComponent],
                    exports: [SelectBarComponent, SelectBarOptionComponent]
                },] },
    ];
    /** @nocollapse */
    SelectBarModule.ctorParameters = function () { return []; };
    return SelectBarModule;
}());
exports.SelectBarModule = SelectBarModule;
