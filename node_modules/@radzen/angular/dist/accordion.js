"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = require("@angular/core");
var common_1 = require("@angular/common");
var accordion_1 = require("primeng/accordion");
var AccordionItemComponent = /** @class */ (function () {
    function AccordionItemComponent() {
    }
    AccordionItemComponent.decorators = [
        { type: core_1.Component, args: [{
                    selector: 'rz-accordion-item',
                    template: "\n    <ng-template><ng-content></ng-content></ng-template>\n  "
                },] },
    ];
    /** @nocollapse */
    AccordionItemComponent.ctorParameters = function () { return []; };
    AccordionItemComponent.propDecorators = {
        "text": [{ type: core_1.Input },],
        "icon": [{ type: core_1.Input },],
        "selected": [{ type: core_1.Input },],
        "template": [{ type: core_1.ViewChild, args: [core_1.TemplateRef,] },],
    };
    return AccordionItemComponent;
}());
exports.AccordionItemComponent = AccordionItemComponent;
var AccordionComponent = /** @class */ (function () {
    function AccordionComponent() {
        this.multiple = false;
        this.style = {};
        this.expand = new core_1.EventEmitter();
        this.collapse = new core_1.EventEmitter();
    }
    AccordionComponent.prototype.onOpen = function (event) {
        this.expand.next({
            index: event.index
        });
    };
    AccordionComponent.prototype.onClose = function (event) {
        this.collapse.next({
            index: event.index
        });
    };
    AccordionComponent.decorators = [
        { type: core_1.Component, args: [{
                    selector: 'rz-accordion',
                    template: "<p-accordion (onClose)=\"onClose($event)\" (onOpen)=\"onOpen($event)\" [style]=\"style\" [multiple]=\"multiple\">\n    <p-accordionTab *ngFor=\"let item of items; let index = index\" [header]=\"item.icon ? null : item.text\" [selected]=\"item.selected || index == selectedIndex\">\n      <p-header *ngIf=\"item.icon\">\n        <i class=\"material-icons\">{{item.icon}}</i><span class=\"material-icons-label\">{{item.text}}</span>\n      </p-header>\n      <ng-container *ngTemplateOutlet=\"item.template\"></ng-container>\n    </p-accordionTab>\n  </p-accordion>"
                },] },
    ];
    /** @nocollapse */
    AccordionComponent.ctorParameters = function () { return []; };
    AccordionComponent.propDecorators = {
        "multiple": [{ type: core_1.Input },],
        "selectedIndex": [{ type: core_1.Input },],
        "style": [{ type: core_1.Input },],
        "expand": [{ type: core_1.Output },],
        "collapse": [{ type: core_1.Output },],
        "items": [{ type: core_1.ContentChildren, args: [AccordionItemComponent,] },],
    };
    return AccordionComponent;
}());
exports.AccordionComponent = AccordionComponent;
var AccordionModule = /** @class */ (function () {
    function AccordionModule() {
    }
    AccordionModule.decorators = [
        { type: core_1.NgModule, args: [{
                    imports: [common_1.CommonModule, accordion_1.AccordionModule],
                    declarations: [AccordionComponent, AccordionItemComponent],
                    exports: [AccordionComponent, AccordionItemComponent]
                },] },
    ];
    /** @nocollapse */
    AccordionModule.ctorParameters = function () { return []; };
    return AccordionModule;
}());
exports.AccordionModule = AccordionModule;
