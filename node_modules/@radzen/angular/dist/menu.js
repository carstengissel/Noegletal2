"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = require("@angular/core");
var common_1 = require("@angular/common");
var Subject_1 = require("rxjs/Subject");
var navigation_1 = require("./navigation");
var MenuItemComponent = /** @class */ (function (_super) {
    __extends(MenuItemComponent, _super);
    function MenuItemComponent() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    MenuItemComponent.decorators = [
        { type: core_1.Component, args: [{
                    selector: 'rz-menu-item',
                    template: ""
                },] },
    ];
    /** @nocollapse */
    MenuItemComponent.ctorParameters = function () { return []; };
    MenuItemComponent.propDecorators = {
        "items": [{ type: core_1.ContentChildren, args: [MenuItemComponent,] },],
    };
    return MenuItemComponent;
}(navigation_1.NavigationItemComponent));
exports.MenuItemComponent = MenuItemComponent;
var MenuComponent = /** @class */ (function () {
    function MenuComponent(elementRef) {
        var _this = this;
        this.elementRef = elementRef;
        this.style = {};
        this.className = '';
        this.click = new core_1.EventEmitter();
        this.ngUnsubscribe = new Subject_1.Subject();
        this.childrenToItems = function () {
            _this.items = navigation_1.childrenToItems(_this.children.toArray());
        };
    }
    MenuComponent.prototype.ngAfterContentInit = function () {
        if (this.children) {
            this.childrenToItems();
            this.children.changes.subscribe(this.childrenToItems);
        }
    };
    MenuComponent.prototype.ngOnDestroy = function () {
        this.ngUnsubscribe.next();
        this.ngUnsubscribe.complete();
    };
    MenuComponent.prototype.onClick = function (event) {
        if (!this.elementRef.nativeElement.contains(event.target)) {
            this.menu.close();
        }
    };
    MenuComponent.decorators = [
        { type: core_1.Component, args: [{
                    selector: 'rz-menu',
                    template: "\n    <ul [ngStyle]=\"style\" class=\"menu\" [ngClass]=\"[className]\" rz-submenu\n        (click)=\"click.next($event)\" [horizontal]=\"true\" [items]=\"items\">\n    </ul>\n  "
                },] },
    ];
    /** @nocollapse */
    MenuComponent.ctorParameters = function () { return [
        { type: core_1.ElementRef, },
    ]; };
    MenuComponent.propDecorators = {
        "items": [{ type: core_1.Input },],
        "style": [{ type: core_1.Input },],
        "className": [{ type: core_1.Input, args: ['class',] },],
        "click": [{ type: core_1.Output },],
        "children": [{ type: core_1.ContentChildren, args: [MenuItemComponent,] },],
        "menu": [{ type: core_1.ViewChild, args: [navigation_1.SubMenuComponent,] },],
        "onClick": [{ type: core_1.HostListener, args: ['document:click', ['$event'],] },],
    };
    return MenuComponent;
}());
exports.MenuComponent = MenuComponent;
var MenuModule = /** @class */ (function () {
    function MenuModule() {
    }
    MenuModule.decorators = [
        { type: core_1.NgModule, args: [{
                    imports: [common_1.CommonModule, navigation_1.NavigationModule],
                    declarations: [MenuComponent, MenuItemComponent],
                    exports: [MenuComponent, MenuItemComponent]
                },] },
    ];
    /** @nocollapse */
    MenuModule.ctorParameters = function () { return []; };
    return MenuModule;
}());
exports.MenuModule = MenuModule;
