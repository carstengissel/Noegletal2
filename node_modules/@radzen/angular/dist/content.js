"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = require("@angular/core");
var common_1 = require("@angular/common");
var Subject_1 = require("rxjs/Subject");
var dialog_1 = require("./dialog");
var ContentService = /** @class */ (function () {
    function ContentService() {
        this.contentRegistered$ = new Subject_1.Subject();
    }
    ContentService.prototype.afterContentRegistered = function () {
        return this.contentRegistered$.asObservable();
    };
    ContentService.prototype.registerContent = function (content) {
        this.contentRegistered$.next(content);
    };
    ContentService.decorators = [
        { type: core_1.Injectable },
    ];
    /** @nocollapse */
    ContentService.ctorParameters = function () { return []; };
    return ContentService;
}());
exports.ContentService = ContentService;
var ContentComponent = /** @class */ (function () {
    function ContentComponent(containerRef, contentService, dialogRef) {
        this.containerRef = containerRef;
        this.contentService = contentService;
        this.dialogRef = dialogRef;
    }
    ContentComponent.prototype.ngOnInit = function () {
        if (this.dialogRef == null) {
            // Do not register if displayed inside a dialog
            this.contentService.registerContent({
                container: this.container,
                elementRef: this.containerRef.element
            });
        }
    };
    ContentComponent.decorators = [
        { type: core_1.Component, args: [{
                    selector: 'rz-content',
                    template: '<div class="content"><ng-content></ng-content></div>'
                },] },
    ];
    /** @nocollapse */
    ContentComponent.ctorParameters = function () { return [
        { type: core_1.ViewContainerRef, },
        { type: ContentService, },
        { type: dialog_1.DialogRef, decorators: [{ type: core_1.Optional },] },
    ]; };
    ContentComponent.propDecorators = {
        "container": [{ type: core_1.Input },],
    };
    return ContentComponent;
}());
exports.ContentComponent = ContentComponent;
var ContentModule = /** @class */ (function () {
    function ContentModule() {
    }
    ContentModule.decorators = [
        { type: core_1.NgModule, args: [{
                    imports: [common_1.CommonModule, dialog_1.DialogModule],
                    declarations: [ContentComponent],
                    providers: [ContentService],
                    exports: [ContentComponent]
                },] },
    ];
    /** @nocollapse */
    ContentModule.ctorParameters = function () { return []; };
    return ContentModule;
}());
exports.ContentModule = ContentModule;
