"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = require("@angular/core");
var common_1 = require("@angular/common");
var Subject_1 = require("rxjs/Subject");
require("rxjs/add/operator/takeUntil");
var transition_1 = require("./transition");
var layout_1 = require("./layout");
var BodyComponent = /** @class */ (function () {
    function BodyComponent(elementRef, layoutService) {
        var _this = this;
        this.elementRef = elementRef;
        this.style = {};
        this.ngUnsubscribe = new Subject_1.Subject();
        layoutService.headerHeight
            .takeUntil(this.ngUnsubscribe)
            .subscribe(function (headerHeight) {
            _this.headerHeight = headerHeight;
        });
        layoutService.footerHeight
            .takeUntil(this.ngUnsubscribe)
            .subscribe(function (footerHeight) {
            _this.footerHeight = footerHeight;
        });
    }
    BodyComponent.prototype.ngAfterViewInit = function () {
        //Force redraw in WebKit browsers
        var nativeElement = this.elementRef.nativeElement;
        nativeElement.style.display = 'none';
        nativeElement.offsetHeight;
        nativeElement.style.display = '';
    };
    BodyComponent.prototype.ngOnDestroy = function () {
        this.ngUnsubscribe.next();
        this.ngUnsubscribe.complete();
    };
    BodyComponent.decorators = [
        { type: core_1.Component, args: [{
                    selector: 'rz-body',
                    template: "\n  <div class=\"body\" [ngStyle]=\"style\" [style.marginTop.px]=\"headerHeight\" [style.marginBottom.px]=\"footerHeight\"\n      [@open]=\"{value: offset.sidebarOpen ? 'visible': 'hidden', params: {marginLeft: offset.sidebarWidth}}\"\n      [rz-offset-by-sidebar]=\"true\">\n    <ng-content></ng-content>\n  </div>\n  ",
                    animations: [transition_1.sidebarAnimation]
                },] },
    ];
    /** @nocollapse */
    BodyComponent.ctorParameters = function () { return [
        { type: core_1.ElementRef, },
        { type: layout_1.LayoutService, },
    ]; };
    BodyComponent.propDecorators = {
        "style": [{ type: core_1.Input },],
        "offset": [{ type: core_1.ViewChild, args: [layout_1.OffsetBySidebarDirective,] },],
    };
    return BodyComponent;
}());
exports.BodyComponent = BodyComponent;
var BodyModule = /** @class */ (function () {
    function BodyModule() {
    }
    BodyModule.decorators = [
        { type: core_1.NgModule, args: [{
                    imports: [common_1.CommonModule, layout_1.LayoutModule],
                    declarations: [BodyComponent],
                    exports: [BodyComponent]
                },] },
    ];
    /** @nocollapse */
    BodyModule.ctorParameters = function () { return []; };
    return BodyModule;
}());
exports.BodyModule = BodyModule;
