"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = require("@angular/core");
var common_1 = require("@angular/common");
var validator_1 = require("./validator");
var form_component_1 = require("./form-component");
var CompareValidatorComponent = /** @class */ (function (_super) {
    __extends(CompareValidatorComponent, _super);
    function CompareValidatorComponent() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.text = 'Value should match';
        return _this;
    }
    Object.defineProperty(CompareValidatorComponent.prototype, "componentToCompare", {
        set: function (component) {
            if (component) {
                var ngModel = component.ngModel;
                if (ngModel) {
                    var control = ngModel.control;
                    this.target = control;
                }
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CompareValidatorComponent.prototype, "validate", {
        get: function () {
            var _this = this;
            return function (control) {
                var value = _this.target ? _this.target.value : _this.value;
                return control.value != value
                    ? {
                        compare: { value: control.value }
                    }
                    : null;
            };
        },
        enumerable: true,
        configurable: true
    });
    CompareValidatorComponent.decorators = [
        { type: core_1.Component, args: [{
                    selector: 'rz-compare-validator',
                    template: "\n    <div [ngStyle]=\"style\" class=\"ui-message ui-messages-error\"\n      *ngIf=\"token || (control?.errors?.compare && (control?.touched || control?.dirty || form?.ngForm?.submitted))\">\n        {{ text }}\n    </div>\n  "
                },] },
    ];
    /** @nocollapse */
    CompareValidatorComponent.ctorParameters = function () { return []; };
    CompareValidatorComponent.propDecorators = {
        "text": [{ type: core_1.Input },],
        "value": [{ type: core_1.Input },],
        "componentToCompare": [{ type: core_1.Input },],
    };
    return CompareValidatorComponent;
}(validator_1.ValidatorComponent));
exports.CompareValidatorComponent = CompareValidatorComponent;
var CompareValidatorModule = /** @class */ (function () {
    function CompareValidatorModule() {
    }
    CompareValidatorModule.decorators = [
        { type: core_1.NgModule, args: [{
                    imports: [common_1.CommonModule],
                    declarations: [CompareValidatorComponent],
                    exports: [CompareValidatorComponent]
                },] },
    ];
    /** @nocollapse */
    CompareValidatorModule.ctorParameters = function () { return []; };
    return CompareValidatorModule;
}());
exports.CompareValidatorModule = CompareValidatorModule;
