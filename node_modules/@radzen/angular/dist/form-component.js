"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = require("@angular/core");
var forms_1 = require("@angular/forms");
var FormComponent = /** @class */ (function () {
    function FormComponent() {
        this.name = '';
        this.disabled = false;
        this.change = new core_1.EventEmitter();
        this.validators = [];
        this.onChange = function (value) { };
        this.onTouched = function () { };
    }
    Object.defineProperty(FormComponent.prototype, "value", {
        get: function () {
            return this.innerValue;
        },
        set: function (value) {
            if (value != this.innerValue) {
                this.innerValue = value;
                this.onChange(value);
                this.change.next(value);
            }
        },
        enumerable: true,
        configurable: true
    });
    FormComponent.prototype.writeValue = function (value) {
        this.innerValue = value;
    };
    FormComponent.prototype.registerOnChange = function (fn) {
        this.onChange = fn;
    };
    FormComponent.prototype.registerOnTouched = function (fn) {
        this.onTouched = fn;
    };
    FormComponent.prototype.setDisabledState = function (isDisabled) {
        this.disabled = isDisabled;
    };
    FormComponent.prototype.registerValidator = function (validator) {
        this.validators.push(validator);
    };
    FormComponent.prototype.ngAfterViewInit = function () {
        var _this = this;
        if (this.ngModel) {
            this.ngModel.name = this.name;
            this.validators.forEach(function (validator) {
                return validator.applyTo(_this.ngModel.control);
            });
        }
    };
    FormComponent.propDecorators = {
        "name": [{ type: core_1.Input },],
        "disabled": [{ type: core_1.Input },],
        "change": [{ type: core_1.Output },],
        "ngModel": [{ type: core_1.ViewChild, args: [forms_1.NgModel,] },],
        "value": [{ type: core_1.Input },],
    };
    return FormComponent;
}());
exports.FormComponent = FormComponent;
