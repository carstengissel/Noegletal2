import { TemplateRef, QueryList, EventEmitter, SimpleChanges } from '@angular/core';
export declare class GridTemplateDirective {
    template: TemplateRef<any>;
    constructor(template: TemplateRef<any>);
}
export declare class GridColumnFooterTemplate {
    templateRef: TemplateRef<any>;
    constructor(templateRef: TemplateRef<any>);
}
export declare class GridColumnTemplate {
    templateRef: TemplateRef<any>;
    constructor(templateRef: TemplateRef<any>);
}
export declare class GridColumn {
    private grid;
    title: string;
    type: string;
    format: string;
    property: string;
    sortProperty: string;
    filterProperty: string;
    filterValue: any;
    sortable: boolean;
    filterable: boolean;
    width: number | string;
    readonly style: any;
    private _filterOperator;
    filterOperator: string;
    private _filterOperators;
    readonly filterOperators: any;
    template: TemplateRef<any>;
    footerTemplate: any;
    constructor(grid: GridComponent);
}
export declare class GridComponent {
    style: any;
    data: any[];
    allowDelete: boolean;
    allowAdd: boolean;
    allowSorting: boolean;
    allowMultiSorting: boolean;
    allowPaging: boolean;
    allowFiltering: boolean;
    allowScrolling: boolean;
    allowColumnResize: boolean;
    allowColumnReorder: boolean;
    applyFilterText: string;
    clearFilterText: string;
    filterDateFormat: string;
    columnResizeMode: string;
    pageSize: number;
    readonly styleClass: string;
    columnWidth: string;
    pageSizeOptions: any;
    count: number;
    title: string;
    visible: boolean;
    icon: string;
    titleBackground: string;
    titleColor: string;
    emptyText: string;
    addText: string;
    isLoading: boolean;
    groupProperty: string;
    expandableGroups: boolean;
    rowSelect: EventEmitter<any>;
    rowDoubleClick: EventEmitter<any>;
    rowExpand: EventEmitter<any>;
    rowCollapse: EventEmitter<any>;
    delete: EventEmitter<any>;
    add: EventEmitter<any>;
    loadData: EventEmitter<any>;
    valueChange: EventEmitter<any>;
    expandableTemplate: GridTemplateDirective;
    scrollHeight: string;
    loading: boolean;
    today: Date;
    private selection;
    private skip;
    private top;
    value: any;
    dataTable: any;
    columns: QueryList<GridColumn>;
    multiSortMeta: any[];
    groupHeader(data: any): any;
    constructor();
    onSelect(value: any): void;
    onRowExpand(value: any): void;
    onRowDoubleClick(value: any): void;
    onRowCollapse(value: any): void;
    ngOnChanges(changes: SimpleChanges): void;
    onDelete(value: any): void;
    onAdd(value: any): void;
    state: {
        skip: number;
        top: number;
        filter: any[];
        sort: any[];
    };
    onPage(event: any): void;
    orderBy: string;
    onSort(event: any): void;
    rawFilters: any;
    filter: string;
    onFilter(event: any): void;
    onDateFilter(dt: any, value: string, column: GridColumn, op: any): void;
    onBooleanFilter(dt: any, value: boolean | null, column: GridColumn): void;
    onStringFilter(dt: any, value: string | null, column: GridColumn): void;
    onNumberFilter(dt: any, value: number | null, column: GridColumn): void;
    onFilterMenu(dt: any, column: GridColumn, op: any): void;
    callLoadData(): void;
    private filterOperator(dt, filterOperator);
    private filterOperatorToState(filterOperator);
}
export declare function orderByToString(multiSortMeta: Array<any>): string;
export declare class GridModule {
}
