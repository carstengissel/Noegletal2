"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = require("@angular/core");
var common_1 = require("@angular/common");
var fieldset_1 = require("primeng/fieldset");
var FieldsetHeaderComponent = /** @class */ (function () {
    function FieldsetHeaderComponent() {
    }
    FieldsetHeaderComponent.decorators = [
        { type: core_1.Component, args: [{
                    selector: 'rz-fieldset-header',
                    template: "\n    <ng-content></ng-content>\n  "
                },] },
    ];
    /** @nocollapse */
    FieldsetHeaderComponent.ctorParameters = function () { return []; };
    return FieldsetHeaderComponent;
}());
exports.FieldsetHeaderComponent = FieldsetHeaderComponent;
var FieldsetComponent = /** @class */ (function () {
    function FieldsetComponent() {
        this.style = {};
        this.allowCollapse = false;
        this.collapsed = false;
        this.expand = new core_1.EventEmitter();
        this.collapse = new core_1.EventEmitter();
    }
    FieldsetComponent.prototype.onToggle = function (event) {
        if (event.collapsed) {
            this.collapse.next();
        }
        else {
            this.expand.next();
        }
    };
    FieldsetComponent.decorators = [
        { type: core_1.Component, args: [{
                    selector: 'rz-fieldset',
                    template: "<p-fieldset (onAfterToggle)=\"onToggle($event)\" [collapsed]=\"collapsed\" [style]=\"style\" [toggleable]=\"allowCollapse\" [legend]=\"icon ? null : text\">\n    <p-header *ngIf=\"icon\">\n      <i class=\"material-icons\">{{icon}}</i><span class=\"material-icons-label\">{{text}}</span>\n    </p-header>\n    <p-header>\n      <ng-content select=\"rz-fieldset-header\"></ng-content>\n    </p-header>\n    <ng-content></ng-content>\n  </p-fieldset>"
                },] },
    ];
    /** @nocollapse */
    FieldsetComponent.ctorParameters = function () { return []; };
    FieldsetComponent.propDecorators = {
        "text": [{ type: core_1.Input },],
        "icon": [{ type: core_1.Input },],
        "style": [{ type: core_1.Input },],
        "allowCollapse": [{ type: core_1.Input },],
        "collapsed": [{ type: core_1.Input },],
        "expand": [{ type: core_1.Output },],
        "collapse": [{ type: core_1.Output },],
    };
    return FieldsetComponent;
}());
exports.FieldsetComponent = FieldsetComponent;
var FieldsetModule = /** @class */ (function () {
    function FieldsetModule() {
    }
    FieldsetModule.decorators = [
        { type: core_1.NgModule, args: [{
                    imports: [common_1.CommonModule, fieldset_1.FieldsetModule],
                    declarations: [FieldsetComponent, FieldsetHeaderComponent],
                    exports: [FieldsetComponent, FieldsetHeaderComponent]
                },] },
    ];
    /** @nocollapse */
    FieldsetModule.ctorParameters = function () { return []; };
    return FieldsetModule;
}());
exports.FieldsetModule = FieldsetModule;
