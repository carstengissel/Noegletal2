import { EventEmitter } from '@angular/core';
import { NgModel, ControlValueAccessor } from '@angular/forms';
import { ValidatorComponent } from './validator';
export declare abstract class FormComponent<T> implements ControlValueAccessor {
    name: string;
    disabled: boolean;
    change: EventEmitter<any>;
    ngModel: NgModel;
    value: T;
    protected innerValue: T;
    private validators;
    onChange: (value: T) => void;
    onTouched: () => void;
    writeValue(value: T): void;
    registerOnChange(fn: (value: T) => void): void;
    registerOnTouched(fn: () => void): void;
    setDisabledState(isDisabled: boolean): void;
    registerValidator(validator: ValidatorComponent): void;
    ngAfterViewInit(): void;
}
